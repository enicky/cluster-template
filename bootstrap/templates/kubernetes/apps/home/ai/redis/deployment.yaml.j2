apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{ bootstrap_ai.redis.fullname | default('redis') }#
  namespace: #{ bootstrap_ai.namespace | default('ai') }#
spec:
  replicas: #{ bootstrap_ai.redis.replicaCount | default(1) }#
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: #{ bootstrap_ai.redis.fullname | default('redis') }#
  template:
    metadata:
      labels:
        app: #{ bootstrap_ai.redis.fullname | default('redis') }#
        app.kubernetes.io/name: #{ bootstrap_ai.redis.fullname | default('redis') }#
        app.kubernetes.io/component: redis
    spec:
      containers:
        - name: #{ bootstrap_ai.redis.name | default('redis') }#
          image: "#{ bootstrap_ai.redis.image.repository | default('redis') }#:#{ bootstrap_ai.redis.image.tag | default('7.2.5') }#"
          imagePullPolicy: #{ bootstrap_ai.redis.image.pullPolicy | default('IfNotPresent') }#
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          resources:
            requests:
              cpu: #{ bootstrap_ai.redis.resources.requests.cpu | default('50m') }#
              memory: #{ bootstrap_ai.redis.resources.requests.memory | default('64Mi') }#
            limits:
              cpu: #{ bootstrap_ai.redis.resources.limits.cpu | default('250m') }#
              memory: #{ bootstrap_ai.redis.resources.limits.memory | default('256Mi') }#
          volumeMounts:
            - name: redis-data
              mountPath: /data
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: password
          args:
            - "--requirepass"
            - "$(REDIS_PASSWORD)"
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: #{ bootstrap_ai.redis.fullname | default('redis') }#-data

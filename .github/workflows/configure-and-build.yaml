name: Configure and Build

on:
  workflow_dispatch:

jobs:
  configure:
    runs-on: arc-runner-set
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Some Debugging stuff
        run: |
          echo "Debugging information"
          uname -a
          arch
      - name: Install yq
        run: |
          curl https://github.com/mikefarah/yq/releases/download/v4.47.1/yq_linux_arm64 -o yq && \
              chmod +x yq && \
              sudo mv yq /usr/local/bin/ && \
              yq --version
      - name: Install Azure CLI + mise
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Download config.yaml from Azure Blob Storage
        run: |
          az storage blob download \
            --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
            --container-name ${{ secrets.AZURE_STORAGE_CONTAINER }} \
            --name config.yaml \
            --file config.yaml \
            --account-key ${{ secrets.AZURE_STORAGE_KEY }}

      - name: Install Task (go-task)
        run: |
          NOCOLOR='\033[0m'
          RED='\033[0;31m'
          GREEN='\033[0;32m'
          ORANGE='\033[0;33m'
          BLUE='\033[0;34m'
          PURPLE='\033[0;35m'
          CYAN='\033[0;36m'
          LIGHTGRAY='\033[0;37m'
          DARKGRAY='\033[1;30m'
          LIGHTRED='\033[1;31m'
          LIGHTGREEN='\033[1;32m'
          YELLOW='\033[1;33m'
          LIGHTBLUE='\033[1;34m'
          LIGHTPURPLE='\033[1;35m'
          LIGHTCYAN='\033[1;36m'
          WHITE='\033[1;37m'

          echo -e "${LIGHTBLUE}Installing UV ...${NOCOLOR}"
          curl -LsSf https://astral.sh/uv/install.sh | sh


          echo -e "${LIGHTBLUE}Installing mise...${NOCOLOR}"
          curl https://mise.run | sh
          export PATH="$HOME/.local/bin:$PATH"
          echo -e "${LIGHTBLUE}mise installed successfully.${NOCOLOR}"
          echo -e "${LIGHTBLUE}Show mise env variables:${NOCOLOR}"

          mise env
          echo -e "${RED}----------------${NOCOLOR}"

          echo -e "${RED}----------------${NOCOLOR}"
          echo -e "${LIGHTBLUE}Installing ksops...${NOCOLOR}"
          curl https://raw.githubusercontent.com/viaduct-ai/kustomize-sops/master/scripts/install-ksops-archive.sh -o install-ksops-archive.sh
          chmod +x install-ksops-archive.sh
          ./install-ksops-archive.sh $HOME/.local/bin/
          echo -e "${LIGHTBLUE}ksops installation finished${NOCOLOR}"
          echo -e "${RED}----------------${NOCOLOR}"

          echo -e "${LIGHTBLUE}Installing asdf...${NOCOLOR}"
          curl -L https://github.com/asdf-vm/asdf/releases/download/v0.18.0/asdf-v0.18.0-linux-arm64.tar.gz -o /tmp/asdf.tar.gz

          ls -la /tmp/

          tar -xvzf /tmp/asdf.tar.gz -C $HOME/.local/bin
          ls -la $HOME/.local/bin/
          export PATH="$HOME/.local/bin:$PATH"
          echo -e "${LIGHTBLUE}asdf installed successfully.${NOCOLOR}"


          echo -e "${LIGHTBLUE}Start Mise install stuff${NOCOLOR}"
          which mise

          #asdf plugin add ksops https://github.com/janpieper/asdf-ksops.git

          echo -e "${LIGHTBLUE}Mise Trust ${NOCOLOR}"
          ARCH=arm64 /home/runner/.local/bin/mise trust
          echo -e "${LIGHTBLUE}Mise install${NOCOLOR}"
          ARCH=arm64 /home/runner/.local/bin/mise install
          echo -e "${LIGHTBLUE}Mise install finished. Start mise run install${NOCOLOR}"
          ARCH=arm64 /home/runner/.local/bin/mise run install
          echo -e "${LIGHTBLUE}mise run install finished${NOCOLOR}"
          echo -e "${LIGHTBLUE}Start to install task${NOCOLOR}"
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d
          echo -e "${LIGHTBLUE}Task installation finished${NOCOLOR}"
          echo -e "${LIGHTBLUE}source .venv/bin/activate${NOCOLOR}"
          source .venv/bin/activate

          echo -e "${LIGHTBLUE}start pip install makejinja${NOCOLOR}"
          uv pip install makejinja
          echo -e "${LIGHTBLUE}pip install makejinja finished${NOCOLOR}"

      - name: Run task configure
        run: ./bin/task configure -y
